
DECLARE netManStan SHARED INTEGER 1;
DECLARE netStatus SHARED INTEGER 0;

--CREATE COMPUTE MODULE NETMAN_SUBFLOW_CREATE_SIGN_ON_MSG
--	CREATE FUNCTION Main() RETURNS BOOLEAN
--	BEGIN
--		SET OutputRoot = InputRoot;
--		DECLARE CharStan CHARACTER;
--		SET CharStan = CAST(netManStan AS CHARACTER);
--		DECLARE I INTEGER 6;
--		DECLARE J INTEGER;
--		SET J = LENGTH(CharStan);
--		WHILE J < I DO
--			SET CharStan = '0'||CharStan;
--			SET J = LENGTH(CharStan);
--		END WHILE;
--		
--		SET netManStan = netManStan + 1;
--		if netManStan > 999999 THEN
--			SET netManStan = 1;
--		END IF;
--		
--		CREATE FIELD OutputRoot.XMLNSC.data.body;
--		SET OutputRoot.XMLNSC.data.body.messageType = '0800';
--		SET OutputRoot.XMLNSC.data.body.transmissionDateTime = CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'ddMMHHmmss');
--		SET OutputRoot.XMLNSC.data.body.systemsTraceAuditNumber = CharStan;
--		SET OutputRoot.XMLNSC.data.body.forwardingInstitutionIdentificationCode = '0200';
--		SET OutputRoot.XMLNSC.data.body.networkManagementInformationCode = '001';
--		
--		--SET OutputRoot.XMLNSC.data.CorrelId = CAST(OutputRoot.XMLNSC.data.sid AS BLOB CCSID 1208);
--		
--		RETURN TRUE;
--	END;
--
--	CREATE PROCEDURE CopyMessageHeaders() BEGIN
--		DECLARE I INTEGER 1;
--		DECLARE J INTEGER;
--		SET J = CARDINALITY(InputRoot.*[]);
--		WHILE I < J DO
--			SET OutputRoot.*[I] = InputRoot.*[I];
--			SET I = I + 1;
--		END WHILE;
--	END;
--
--	CREATE PROCEDURE CopyEntireMessage() BEGIN
--		SET OutputRoot = InputRoot;
--	END;
--END MODULE;


--CREATE COMPUTE MODULE NETMAN_SUBFLOW_CREATE_ECHOTEST_MSG
--	CREATE FUNCTION Main() RETURNS BOOLEAN
--	BEGIN
--		DECLARE CharStan CHARACTER;
--		SET CharStan = CAST(netManStan AS CHARACTER);
--		DECLARE I INTEGER 6;
--		DECLARE J INTEGER;
--		SET J = LENGTH(CharStan);
--		WHILE J < I DO
--			SET CharStan = '0'||CharStan;
--			SET J = LENGTH(CharStan);
--		END WHILE;
--		
--		SET netManStan = netManStan + 1;
--		if netManStan > 999999 THEN
--			SET netManStan = 1;
--		END IF;
--		SET OutputRoot.XMLNSC.data = InputRoot.XMLNSC.data;
--		--CREATE FIELD OutputRoot.XMLNSC.data.body;
--		
--		SET OutputRoot.XMLNSC.data.body.messageType = '0800';
--		SET OutputRoot.XMLNSC.data.body.transmissionDateTime = CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'ddMMHHmmss');
--		SET OutputRoot.XMLNSC.data.body.systemsTraceAuditNumber = CharStan;
--		SET OutputRoot.XMLNSC.data.body.forwardingInstitutionIdentificationCode = '0200';
--		SET OutputRoot.XMLNSC.data.body.networkManagementInformationCode = '301';
--		
--		--SET OutputRoot.XMLNSC.data.sid = OutputRoot.XMLNSC.data.body.messageType||OutputRoot.XMLNSC.data.body.transmissionDateTime||OutputRoot.XMLNSC.data.body.transmissionDateTime;
--
--		IF netStatus = 1 THEN
--			PROPAGATE TO TERMINAL 'out1';
--		END IF;
--		RETURN FALSE;
--	END;
--
--	CREATE PROCEDURE CopyMessageHeaders() BEGIN
--		DECLARE I INTEGER 1;
--		DECLARE J INTEGER;
--		SET J = CARDINALITY(InputRoot.*[]);
--		WHILE I < J DO
--			SET OutputRoot.*[I] = InputRoot.*[I];
--			SET I = I + 1;
--		END WHILE;
--	END;
--
--	CREATE PROCEDURE CopyEntireMessage() BEGIN
--		SET OutputRoot = InputRoot;
--	END;
--END MODULE;
--



CREATE COMPUTE MODULE NETMAN_SUBFLOW_REMOVE_UNUSED
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
--		DELETE FIELD OutputRoot.XMLNSC.data.CorrelId;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE NETMAN_SUBFLOW_SET_CORRELID
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET OutputRoot.XMLNSC.data.CorrelId = CAST(InputRoot.XMLNSC.data.sid AS BLOB CCSID 1208);
		SET OutputRoot.XMLNSC.data.ReplyToQ = 'ROUTER_OUT';
		SET OutputRoot.XMLNSC.data.ReplyToQMgr = 'BTNAPPBROKER.QM';
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE NETMAN_SUBFLOW_CHECK_NETSTATUS
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		IF InputRoot.XMLNSC.data.control = 'echo' THEN
			RETURN TRUE;
		ELSE
			RETURN FALSE;
		END IF;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
