CREATE COMPUTE MODULE ISO_RETRIEVE_DATA_FLOW_SET_RESPONSE
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		
		IF InputRoot.XMLNSC.data.body.messageType = '0200' THEN
			SET OutputRoot.XMLNSC.data.body.messageType = '0210';
		ELSEIF InputRoot.XMLNSC.data.body.messageType = '0400' THEN
			SET OutputRoot.XMLNSC.data.body.messageType = '0410';
		ELSEIF InputRoot.XMLNSC.data.body.messageType = '0401' THEN
			SET OutputRoot.XMLNSC.data.body.messageType = '0411';
		END IF;
		    SET OutputRoot.XMLNSC.data.body.responseCode='99';
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE SET_ISO_ERROR_MAPPING_NOT_FOUND
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyEntireMessage();

		IF InputRoot.XMLNSC.data.body.messageType = '0200' THEN
			SET OutputRoot.XMLNSC.data.body.messageType = '0210';
		ELSEIF InputRoot.XMLNSC.data.body.messageType = '0400' THEN
			SET OutputRoot.XMLNSC.data.body.messageType = '0410';
		ELSEIF InputRoot.XMLNSC.data.body.messageType = '0401' THEN
			SET OutputRoot.XMLNSC.data.body.messageType = '0411';
		END IF;

		SET OutputRoot.XMLNSC.data.body.responseCode = '92';

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;



CREATE FILTER MODULE MAPPING_NOT_FOUND_FILTER
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF FIELDTYPE(Root.XMLNSC.data.error) IS NULL THEN
			RETURN FALSE;
		ELSE
			IF STARTSWITH(Root.XMLNSC.data.error, 'Mapping ') AND ENDSWITH(Root.XMLNSC.data.error, ' not found') THEN
				RETURN TRUE;
			ELSE
				RETURN FALSE;
			END IF;
		END IF;
	END;
END MODULE;
