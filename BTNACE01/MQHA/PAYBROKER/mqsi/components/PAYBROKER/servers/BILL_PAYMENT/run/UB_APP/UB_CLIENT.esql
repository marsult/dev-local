DECLARE isobit3 EXTERNAL CHARACTER 'processingCode';
--DECLARE ns2 NAMESPACE 'univbrawijaya.h2h.billpayment.ws';
CREATE COMPUTE MODULE UB_CLIENT_SET_QUERY
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET OutputRoot.XMLNSC.sql.mappingId = InputRoot.XMLNSC.data.body.{isobit3} ||'_'||InputRoot.XMLNSC.data.body.messageType;
		
		--SET OutputRoot.XMLNSC.sql.bit3 = InputRoot.XMLNSC.data.body.{isobit3};
--		SET OutputLocalEnvironment.param.CREATE_METHOD = 'NEW';
--		SET OutputLocalEnvironment.param.SRC_PATH = 'XMLNSC';
--		SET OutputLocalEnvironment.param.NAME_SPACE = ns2;


		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE UB_CLIENT_COPY_RESPONSE
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET OutputLocalEnvironment.XMLNSC = InputRoot.XMLNSC;		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE UB_CLIENT_SET_QUERY_RESP
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;		
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I <= J DO
			SET OutputRoot.XMLNSC.response.*[I] = InputLocalEnvironment.XMLNSC.*[I];
			SET I = I + 1;
		END WHILE;
		SET OutputRoot.XMLNSC.sql.mappingId = InputRoot.XMLNSC.data.body.{isobit3} ||'_'||InputRoot.XMLNSC.data.body.messageType||'_RESP';
		
--		SET OutputRoot.XMLNSC.sql.bit3 = InputRoot.XMLNSC.data.body.{isobit3};
--		SET OutputLocalEnvironment.param.CREATE_METHOD = 'MODIFIED';
--		SET OutputLocalEnvironment.param.SRC_PATH = 'XMLNSC';
--		SET OutputLocalEnvironment.param.NAME_SPACE = ns2;
--		SET OutputRoot.XMLNSC.ns2:inquiryResponse.ns2:inquiryResult = InputLocalEnvironment.XMLNSC.ns2:inquiryResponse.ns2:inquiryResult;
		DELETE FIELD OutputLocalEnvironment.XMLNSC;
		DELETE FIELD OutputLocalEnvironment.MQ;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE UB_CLIENT_REMOVE_LOCALENV
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		DELETE FIELD OutputLocalEnvironment.param;
		DELETE FIELD OutputLocalEnvironment.variables;
		DELETE FIELD OutputRoot.XMLNSC.sql;
		DELETE FIELD OutputRoot.XMLNSC.data.response;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
