DECLARE soapenv NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';

CREATE COMPUTE MODULE WS_CLIENT_ADAPTER_FLOW_SAVE_ORIGINAL
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET OutputLocalEnvironment.data = InputRoot.XMLNSC.data;
		SET OutputLocalEnvironment.request_timestamp =InputRoot.XMLNSC.data.reqtimestamp;
		SET OutputLocalEnvironment.request_id= InputRoot.MQMD.CorrelId;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE WS_CLIENT_ADAPTER_FLOW_SET_DATA
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		Call CopyMessageHeaders();
		SET OutputLocalEnvironment = InputLocalEnvironment;
		SET OutputRoot.XMLNSC.data = InputLocalEnvironment.data;
		SET OutputRoot.XMLNSC.data.response = InputRoot.XMLNSC;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE WS_CLIENT_ADAPTER_FLOW_CHECK_RESPONSE
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyEntireMessage();
		SET OutputRoot.HTTPRequestHeader = null;
		SET OutputRoot.HTTPResponseHeader = null;
		IF InputRoot.XMLNSC.data.body.responseCode = '00' OR InputRoot.XMLNSC.data.body.responseCode = '000' OR InputRoot.XMLNSC.data.type LIKE '%iso%' THEN
			RETURN TRUE;
		ElSE
			IF InputLocalEnvironment.data.frontOriginal.CorrelId IS NOT NULL THEN
				SET OutputRoot.XMLNSC.data = InputLocalEnvironment.data.frontOriginal;
			ELSEIF InputLocalEnvironment.data.CorrelId IS NOT NULL THEN
				SET OutputRoot.XMLNSC.data = InputLocalEnvironment.data;
			END IF;
			SET OutputRoot.XMLNSC.data.body.statusDescription = InputRoot.XMLNSC.data.body.statusDescription;
			SET OutputRoot.XMLNSC.data.body.responseCode = InputRoot.XMLNSC.data.body.responseCode;
			PROPAGATE TO TERMINAL 'out1';	
		END IF;
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE WS_CLIENT_ADAPTER_FLOW_SET_RESPONSE
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET OutputRoot.XMLNSC.data.body.messageType = '0210';
		SET OutputRoot.XMLNSC.data.body.responseCode = '89';
		SET OutputRoot.XMLNSC.data.code = OutputRoot.XMLNSC.data.body.messageType||'.'||InputRoot.XMLNSC.data.body.processingCode;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE WS_CLIENT_ADAPTER_FLOW_PAYMENT_CHECK_RESPONSE
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyEntireMessage();
		SET OutputRoot.HTTPRequestHeader = null;
		SET OutputRoot.HTTPResponseHeader = null;
		IF InputRoot.XMLNSC.data.body.responseCode = '00' OR InputRoot.XMLNSC.data.body.responseCode = '000' OR InputRoot.XMLNSC.data.type LIKE '%iso%' THEN
			RETURN TRUE;
		ElSE
			SET OutputRoot.XMLNSC.data = InputLocalEnvironment.data.coreRequest.frontOriginal;
			SET OutputRoot.XMLNSC.data.coreRequest = InputLocalEnvironment.data.coreRequest;
			SET OutputRoot.XMLNSC.data.coreRequest.frontOriginal = NULL;
			SET OutputRoot.XMLNSC.data.body.statusDescription = InputRoot.XMLNSC.data.body.statusDescription;
			SET OutputRoot.XMLNSC.data.body.responseCode = InputRoot.XMLNSC.data.body.responseCode;
			IF InputRoot.XMLNSC.data.body.responseCode IS NULL THEN
				SET OutputRoot.XMLNSC.data.body.responseCode = '99';
			END IF;
			PROPAGATE TO TERMINAL 'out1';	
		END IF;
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE WS_CLIENT_ADAPTER_FLOW_ADD_ENV
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		SET OutputLocalEnvironment.data = InputRoot.XMLNSC.data;
		SET OutputLocalEnvironment.MQMD = InputRoot.MQMD;
		--SET OutputLocalEnvironment.request_timestamp =InputRoot.XMLNSC.data.reqtimestamp;
		SET OutputLocalEnvironment.request_timestamp =InputRoot.XMLNSC.data.frontOriginal.reqtimestamp;
		SET OutputLocalEnvironment.request_id= InputRoot.MQMD.CorrelId;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE WS_CLIENT_ADAPTER_FLOW_SET_DATA2
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		Call CopyMessageHeaders();
		SET OutputRoot.HTTPRequestHeader = null;
		SET OutputRoot.HTTPResponseHeader = null;
		SET OutputRoot.XMLNSC.data = InputLocalEnvironment.data.frontOriginal;
		SET OutputRoot.XMLNSC.data.response = InputRoot.XMLNSC;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE WS_CLIENT_ADAPTER_FLOW_SET_REV_RESPONSE
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET OutputRoot.XMLNSC.data.body.messageType = '0410';
		SET OutputRoot.XMLNSC.data.body.responseCode = '89';
		SET OutputRoot.XMLNSC.data.code = OutputRoot.XMLNSC.data.body.messageType||'.'||InputRoot.XMLNSC.data.body.processingCode;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE FILTER MODULE WS_CLIENT_ADAPTER_FILTER_RESPONSE_PAYMENT
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF FIELDTYPE(Root.XMLNSC.data.response.soapenv:Envelope.soapenv:Body.soapenv:Fault.faultcode) IS NOT NULL AND FIELDTYPE(Root.XMLNSC.data.response.soapenv:Envelope.soapenv:Body.soapenv:Fault.faultstring) IS NOT NULL AND FIELDTYPE(Root.XMLNSC.data.coreRequest.body.isCheckSoapFault) IS NOT NULL AND Root.XMLNSC.data.coreRequest.body.isCheckSoapFault = 'TRUE'  THEN
			RETURN TRUE;
		ELSE
			RETURN FALSE;
		END IF;
	END;
END MODULE;

CREATE FILTER MODULE WS_CLIENT_ADAPTER_FILTER_RESPONSE_INQUIRY
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF FIELDTYPE(Root.XMLNSC.data.response.soapenv:Envelope.soapenv:Body.soapenv:Fault.faultcode) IS NOT NULL AND FIELDTYPE(Root.XMLNSC.data.response.soapenv:Envelope.soapenv:Body.soapenv:Fault.faultstring) IS NOT NULL AND FIELDTYPE (LocalEnvironment.isCheckSoapFault) IS NOT NULL AND LocalEnvironment.isCheckSoapFault = 'TRUE'  THEN
			RETURN TRUE;
		ELSE
			RETURN FALSE;
		END IF;
	END;
END MODULE;

CREATE FILTER MODULE WS_CLIENT_ADAPTER_FILTER_RESPONSE_REVERSAL
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF FIELDTYPE(Root.XMLNSC.data.response.soapenv:Envelope.soapenv:Body.soapenv:Fault.faultcode) IS NOT NULL AND FIELDTYPE(Root.XMLNSC.data.response.soapenv:Envelope.soapenv:Body.soapenv:Fault.faultstring) IS NOT NULL AND FIELDTYPE (LocalEnvironment.isCheckSoapFault) IS NOT NULL AND LocalEnvironment.isCheckSoapFault = 'TRUE'  THEN
			RETURN TRUE;
		ELSE
			RETURN FALSE;
		END IF;
	END;
END MODULE;
