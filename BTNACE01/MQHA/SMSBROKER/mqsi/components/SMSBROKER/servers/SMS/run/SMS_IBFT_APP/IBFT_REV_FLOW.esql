CREATE COMPUTE MODULE IBFT_REV_FLOW_SET_QUERY
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET OutputRoot.MQMD.ReplyToQMgr = '';
		SET OutputRoot.MQMD.Expiry = 2400;
		SET OutputRoot.XMLNSC.data.ReplyToQ = InputRoot.MQMD.ReplyToQ;
		IF InputRoot.XMLNSC.data.type LIKE 'iso%' THEN
			SET OutputRoot.XMLNSC.data.query.code = InputRoot.XMLNSC.data.code;
			SET OutputRoot.XMLNSC.data.query.source = InputRoot.XMLNSC.data.source;
			SET OutputRoot.XMLNSC.data.query.type = InputRoot.XMLNSC.data.type;
			SET OutputRoot.XMLNSC.data.query.messageType = SUBSTRING(InputRoot.XMLNSC.data.body.originalDataElements FROM 1 FOR 4);
			SET OutputRoot.XMLNSC.data.query.retrievelReferenceNumber = TRIM(SUBSTRING(InputRoot.XMLNSC.data.body.originalDataElements FROM 5 FOR 12));
			SET OutputRoot.XMLNSC.data.query.date = SUBSTRING(InputRoot.XMLNSC.data.body.originalDataElements FROM 17 FOR 4);
			SET OutputRoot.XMLNSC.data.query.time = SUBSTRING(InputRoot.XMLNSC.data.body.originalDataElements FROM 21 FOR 6);
		ELSEIF InputRoot.XMLNSC.data.type LIKE '%dsp%' THEN
			SET OutputRoot.XMLNSC.data.query.code = InputRoot.XMLNSC.data.code;
			SET OutputRoot.XMLNSC.data.query.source = InputRoot.XMLNSC.data.source;
			SET OutputRoot.XMLNSC.data.query.seq_num = InputRoot.XMLNSC.data.body.TLBF20;
		END IF;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE IBFT_REV_FLOW_SET_RAW_TYPE
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF InputLocalEnvironment.reqori.RAW IS NOT NULL THEN
			SET OutputRoot.MQMD = InputRoot.MQMD;
			
			SET OutputLocalEnvironment.original = InputRoot.XMLNSC.data;
			SET OutputRoot.XMLNSC.data = InputRoot.XMLNSC.data;
			SET OutputRoot.XMLNSC.data.body = null;
			SET OutputRoot.XMLNSC.data.raw = InputLocalEnvironment.reqori.RAW;
			SET OutputRoot.XMLNSC.data.type = InputLocalEnvironment.reqori.TYPE;
			RETURN TRUE;
		ELSE
			SET OutputRoot = InputRoot;
			PROPAGATE TO TERMINAL 'out1';
			RETURN FALSE;
		END IF;			
	END;
END MODULE;

CREATE COMPUTE MODULE IBFT_REV_FLOW_RESTORE
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET OutputRoot.XMLNSC.data.frontOriginal = InputLocalEnvironment.original;
		SET OutputRoot.XMLNSC.data.reqtimestamp=InputLocalEnvironment.original.reqtimestamp;
		SET OutputRoot.XMLNSC.data.CorrelId=InputLocalEnvironment.original.CorrelId;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE IBFT_REV_FLOW_CHECK_RESP
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		IF InputRoot.XMLNSC.data.body.responseCode = '00' AND STARTSWITH(InputRoot.XMLNSC.data.body.messageType,'04') THEN
			RETURN TRUE;
		ELSEIF STARTSWITH(InputRoot.XMLNSC.data.body.messageType,'02') THEN
			PROPAGATE TO TERMINAL 'out2';
		ELSE
			PROPAGATE TO TERMINAL 'out1';
			RETURN FALSE;
		END IF;
	END;
END MODULE;

CREATE FILTER MODULE IBFT_REV_FLOW_FILTER
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF Root.XMLNSC.data.coreAct = 'reverse' THEN
			RETURN TRUE;
		ELSE
			RETURN FALSE;
		END IF;
	END;
END MODULE;

CREATE COMPUTE MODULE IBFT_REV_FLOW_RESTORE_REVERSP
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET OutputLocalEnvironment = InputLocalEnvironment;
--		SET OutputRoot.XMLNSC.data.billerResponse = InputLocalEnvironment.data.billerResponse;
--		SET OutputRoot.XMLNSC.data.frontOriginal = InputLocalEnvironment.data;
--		SET OutputRoot.XMLNSC.data.frontOriginal.billerResponse = null;
--		SET OutputRoot.XMLNSC.data.coreRequest = InputRoot.XMLNSC.data
		SET OutputRoot.XMLNSC.data.reqtimestamp = InputLocalEnvironment.data.reqtimestamp;
		SET OutputRoot.XMLNSC.data.CorrelId = InputLocalEnvironment.data.CorrelId;
		SET OutputRoot.XMLNSC.data = InputRoot.XMLNSC.data.billerResponse.request.data.body.frontOriginal;
		SET OutputRoot.XMLNSC.data.response = InputRoot.XMLNSC.data;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE ISO_REVERSAL_FLOW_SET_QUEUE
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		IF InputRoot.XMLNSC.data.destinationQueueName IS NOT NULL THEN
			SET OutputLocalEnvironment.Destination.MQDestinationList.DestinationData.queueName = InputRoot.XMLNSC.data.destinationQueueName;
		ELSE
			SET OutputLocalEnvironment.Destination.MQDestinationList.DestinationData.queueName = 'CORE_IN';
		END IF;
		IF InputRoot.XMLNSC.data.destination IS NULL THEN
			SET OutputRoot.XMLNSC.data.destination = 'core-itm';
		END IF;
		--SET OutputRoot.XMLNSC.data.reqtimestamp = InputRoot.XMLNSC.data.frontOriginal.reqtimestamp;
		--SET OutputRoot.XMLNSC.data.billerResponse = InputLocalEnvironment.data.billerResponse;
		--SET OutputRoot.XMLNSC.data.frontOriginal = InputLocalEnvironment.data;
		--SET OutputRoot.XMLNSC.data.frontOriginal.billerResponse = null;
		RETURN TRUE;
--		SET OutputRoot = InputRoot;
--		SET OutputLocalEnvironment.Destination.MQDestinationList.DestinationData.queueName = InputRoot.XMLNSC.data.destinationQueueName;
--		SET OutputRoot.XMLNSC.data.billerResponse = InputLocalEnvironment.data.billerResponse;
--		SET OutputRoot.XMLNSC.data.frontOriginal = InputLocalEnvironment.data;
--		SET OutputRoot.XMLNSC.data.frontOriginal.billerResponse = null;
--		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE IBFT_REV_FLOW_STORE_RESP
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot= InputRoot;
		SET OutputLocalEnvironment.data = InputRoot.XMLNSC.data;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE IBFT_REV_FLOW_SET_RESP
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET OutputRoot.XMLNSC.data = InputLocalEnvironment.data;
		SET OutputRoot.MQMD.ReplyToQMgr = '';
		SET OutputRoot.MQMD.ReplyToQ = InputLocalEnvironment.data.ReplyToQ;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE ISO_REVERSAL_FLOW_SET_REQTIMESTAMP
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET OutputRoot.XMLNSC.data.reqtimestamp = InputRoot.XMLNSC.data.request.data.reqtimestamp;
		SET OutputRoot.XMLNSC.data.sid = InputRoot.XMLNSC.data.request.data.CorrelId;
		SET OutputRoot.XMLNSC.data.CorrelId = InputRoot.XMLNSC.data.request.data.CorrelId;
		RETURN TRUE;
	END;
END MODULE;